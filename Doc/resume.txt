Exigences générales

    Langage de programmation : C
    Normes : Respect des normes de codage de l'école 42.
    Gestion des erreurs : Aucun comportement imprévu (segmentation fault, bus error, etc.).
    Gestion de la mémoire : Pas de fuites de mémoire.
    Makefile :
        Contenir les règles $(NAME), all, clean, fclean, re.
        Utiliser les flags -Wall, -Wextra, et -Werror.
    Libft : Si utilisée, elle doit être incluse dans un dossier libft avec son propre Makefile.
    Tests : Encouragés mais non obligatoires.

Partie obligatoire

    Fonctionnalités de base :
        Affichage d'un prompt.
        Historique des commandes.
        Exécution des commandes basées sur la variable PATH, chemin relatif ou absolu.
        Gestion des signaux avec une seule variable globale pour les signaux reçus.
        Gestion des citations simples et doubles.
        Redirections : <, >, <<, >>.
        Pipes (|).
        Variables d'environnement et $?.
        Comportement des touches ctrl-C, ctrl-D, et ctrl-\ en mode interactif.
    Builtins :
        echo avec option -n
        cd avec un chemin relatif ou absolu
        pwd sans options
        export sans options
        unset sans options
        env sans options ou arguments
        exit sans options

Partie bonus (si la partie obligatoire est parfaite)

    Fonctionnalités avancées :
        Opérateurs && et || avec parenthèses pour la priorité.
        Wildcards * pour le répertoire de travail courant.

Soumission et évaluation par les pairs

    Dépôt Git : Soumission dans le dépôt Git assigné.
    Évaluation : Par pairs avec respect des consignes et utilisation des scripts de test si nécessaires.